"""
Django settings for news_portal project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

config_file = 'C:/Users/Admin/Desktop/config.txt'
with open(config_file, 'r') as f:
    info_list = [line.strip() for line in f]


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i_-@(o-+pa)%ke32)7*5#m6ywpyn_h&b1dw!l0hzbcev#8ogv$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'django.contrib.sites',
    'django.contrib.flatpages',
    
    'mymodel',
    
    'accounts',
    
    'allauth',
    'allauth.account',
    
    # Необязательно — требуется установка с использованием `django-allauth[socialaccount]`.
    'allauth.socialaccount',
    
    # ... включите провайдеров, которых вы хотите включить:
    'allauth.socialaccount.providers.yandex',
    
    'subscriptions',
    'django_apscheduler',
]

# Запуск скриптов django_apscheduler автоматически
SCHEDULER_AUTOSTART = True

SITE_ID = 1
STATICFILES_DIRS = [BASE_DIR / 'static']

LOGIN_REDIRECT_URL = '/news'
LOGOUT_REDIRECT_URL = '/news'

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_UNIQUE_USERNAME = True
ACCOUNT_AUTHENTICATION_METHOD = 'username'
ACCOUNT_EMAIL_VERIFICATION = 'none'


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'admin@example.com'


# --------------------- НАСТРОЙКИ CELERY ---------------------
# ------------------------------------------------------------
# Если вы используете Redis Labs, то переменные CELERY_BROKER_URL и CELERY_RESULT_BACKEND должны строиться по шаблону:
# redis://логин:пароль@endpoint:port

CELERY_BROKER_URL = f'redis://default:{info_list[2]}@{info_list[0]}:{info_list[1]}'  # Указывает на URL брокера сообщений (Redis). По умолчанию он находится на порту 6379
CELERY_RESULT_BACKEND = f'redis://default:{info_list[2]}@{info_list[0]}:{info_list[1]}'  # Указывает на хранилище результатов выполнения задач
CELERY_ACCEPT_CONTENT = ['application/json']  # Допустимый формат данных
CELERY_TASK_SERIALIZER = 'json'  # Метод сериализации задач
CELERY_RESULT_SERIALIZER = 'json'  # Метод сериализации результатов

# Также обратите внимание, что Celery с версией выше 4+ не поддерживается Windows.
# Поэтому если у вас версия Python 3.10 и выше,
# запускайте Celery, добавив в команду флаг: --pool=solo.

# Для запуска Celery нужно быть в директории project

# Запустить Celery:
# celery -A proj_name worker -l INFO
# celery -A proj_name worker -l INFO --pool=solo

# Для запуска периодических задач на Windows запустите в разных окнах терминала:
# celery -A proj_name worker -l INFO --pool=solo
# celery -A proj_name beat -l INFO
# ------------------------------------------------------------


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',

    # Add the account middleware:
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = 'news_portal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'news_portal.wsgi.application'


AUTHENTICATION_BACKENDS = [
    # Needed to log in by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

# USE_TZ = True
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
